{
  "extends": "@antfu",
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "functional",
    "graphql",
    "@ts-gql"
  ],
  "compilerOptions": {
    "moduleResolution": "node"
  },
  "rules": {
    "@ts-gql/ts-gql": "error",
    "@typescript-eslint/quotes": 0,
    "no-console": "off",
    "array-callback-return": "error",
    "no-constructor-return": "error",
    "no-duplicate-imports": "off",
    "no-new-native-nonconstructor": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-unused-private-class-members": "error",
    "class-methods-use-this": "error",
    "consistent-return": "error",
    "default-case": "error",
    "dot-notation": "error",
    "eqeqeq": "error",
    "init-declarations": "error",
    "no-eq-null": "error",
    "no-extend-native": "error",
    "no-implicit-coercion": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "no-implicit-globals": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-var": "error",
    "prefer-object-spread": "error",
    "require-await": "error",
    "yoda": "error",
    "explicit-function-return-type": "off",
    "graphql/template-strings": [
      "error",
      {
        // Import default settings for your GraphQL client. Supported values:
        // 'apollo', 'relay', 'lokka', 'fraql', 'literal'
        "env": "apollo",
        "tagName": "gql",
        // Import your schema JSON here
        "schemaJson": "require('./schema.graphql')"
        // OR provide absolute path to your schema JSON (but not if using `eslint --cache`!)
        // schemaJsonFilepath: path.resolve(__dirname, './schema.json'),
        // OR provide the schema in the Schema Language format
        // schemaString: printSchema(schema),
        // tagName is gql by default
      }
    ]
  }
}